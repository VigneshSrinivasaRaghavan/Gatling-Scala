<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>org.learning</groupId>
    <artifactId>Gatling-Scala</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <encoding>UTF-8</encoding>

        <gatling.version>3.10.3</gatling.version>
        <gatling-maven-plugin.version>4.8.2</gatling-maven-plugin.version>
        <scala-maven-plugin.version>4.8.1</scala-maven-plugin.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>io.gatling.highcharts</groupId>
            <artifactId>gatling-charts-highcharts</artifactId>
            <version>${gatling.version}</version>
        </dependency>
        <dependency>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-app</artifactId>
            <version>${gatling.version}</version>
        </dependency>
        <dependency>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-recorder</artifactId>
            <version>${gatling.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>1.0.2</version>
        </dependency>
    </dependencies>

    <build>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <plugins>
            <plugin>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-maven-plugin.version}</version>
                <configuration>
                    <runMultipleSimulations>true</runMultipleSimulations>
                    <includes>
                        <include>simulations.basics.AddPauseTest</include>
                        <include>simulations.basics.AssertResponseBody</include>
                    </includes>
                    <excludes>
                        <exclude>my.package.IgnoredSimulation</exclude>
                    </excludes>
                    <apiToken>D5WUcHSD4flBX4VfYF.lrrsGMxszUTuIoTSfkMO6O1U0HDO5bXxHHBFi2pPqyGCpI</apiToken>
                    <!-- Simulation that needs to be started, you will be able to create a new simulation if empty -->
                    <simulationId>c74ed502-60f7-44a0-8baa-98235dd03b42</simulationId>
                    <!-- Default package when creating a new simulation -->
                    <!-- You can also use the gatling.enterprise.packageId system property -->
                    <packageId>23430515-cc96-4760-a43d-09fa2850e6c9</packageId>
                    <!-- Default team when creating a new simulation -->
                    <!-- You can also use the gatling.enterprise.teamId system property -->
                    <teamId>ec1e53da-717e-4666-9a5f-40bc39aa2b6a</teamId>
                    <!-- Fully-qualified class name of the simulation used when creating a new simulation -->
                    <!-- You can also use the gatling.simulationClass system property -->
                    <simulationClass>simulations.basics.AddPauseTest</simulationClass>
                    <!-- Wait for the result after starting the simulation on Gatling Enterprise -->
                    <!-- Will complete with an error if the simulation ends with any error status -->
                    <!-- False by default; you can also use the gatling.enterprise.waitForRunEnd system property -->
                    <waitForRunEnd>true</waitForRunEnd>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <jvmArgs>
                                <jvmArg>-Xss100M</jvmArg>
                            </jvmArgs>
                            <args>
                                <arg>-deprecation</arg>
                                <arg>-feature</arg>
                                <arg>-unchecked</arg>
                                <arg>-language:implicitConversions</arg>
                                <arg>-language:postfixOps</arg>
                            </args>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
